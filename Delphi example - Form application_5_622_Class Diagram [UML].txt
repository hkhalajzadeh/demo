Graph_Class_diagram__UML__sysadmin_3019387957
Delphi example - Form application
5_622
Class Diagram [UML]
Graph: Delphi example - Form application <Class Diagram [UML]> 5_622
	Model name: Delphi example - Form application
	Status: draft
	Authors: 
	Documentation: This model describes a small Delphi application. You may generate .pas files from this diagram by choosing Graph | Generate... and then Delphi report from the selection list.
	Show Owned?: F
Object: FitIntoCheck <Class [UML]> 5_1068
	Class name: FitIntoCheck
	Attributes: +Place:coordinates
	Object: +Place:coordinates <Attribute [UML]> 5_11458
		Name: Place
		Data type: coordinates
		Default value: 
		Multiplicity: 
		Ordered?: F
		Unique?: T
		Sequence?: F
		Stereotype: 
		Visibility: public
		Scope: instance
		Access: 
		Derived?: F
		Constraints: 
		Documentation: Place is formed by coordinates (x and Y)
	Operations: +FitIntoCheck(Sender:TObject)void
	Object: +FitIntoCheck(Sender:TObject)void <Operation [UML]> 5_8717
		Operation name: FitIntoCheck
		Parameters: in Sender:TObject
		Object: in Sender:TObject <Parameter> 5_14134
			Parameter: Sender
			Data type: TObject
			Direction: in
			Default value: 
			Effect: 
			Exception?: F
			Stream?: F
		Return type: 
		Overridability: 
		Stereotype: 
		Visibility: public
		Operation type: instance
		Query?: F
		Preconditions: 
		Postconditions: 
		Body: begin
	Image1.Stretch :=FitIntoCheck.Checked;
end;

		Documentation: 
	Package: 
	Abstract?: F
	Active?: F
	Stereotype: 
	Overridability: 
	Role: 
	Parameters: 
	Constraints: 
	Invariant: 
	Derivation rules: 
	Responsibility: 
	Documentation: 
	Simple symbol?: F
Object: TObject <Class [UML]> 5_3788
	Class name: TObject
	Attributes: 
	Operations: 
	Package: 
	Abstract?: F
	Active?: F
	Stereotype: 
	Overridability: 
	Role: 
	Parameters: 
	Constraints: 
	Invariant: 
	Derivation rules: 
	Responsibility: 
	Documentation: 
	Simple symbol?: T
Object: ListBox <Class [UML]> 5_7302
	Class name: ListBox
	Attributes: +Place:coordinates +Width:integer
	Object: +Width:integer <Attribute [UML]> 5_2038
		Name: Width
		Data type: integer
		Default value: 
		Multiplicity: 
		Ordered?: F
		Unique?: T
		Sequence?: F
		Stereotype: 
		Visibility: public
		Scope: instance
		Access: 
		Derived?: F
		Constraints: 
		Documentation: 
	Operations: +ListBox|Change(Sender:TObject)void
	Object: +ListBox|Change(Sender:TObject)void <Operation [UML]> 5_1262
		Operation name: ListBox|Change
		Parameters: in Sender:TObject
		Object: in Sender:TObject <Parameter> 5_7401
			Parameter: Sender
			Data type: TObject
			Direction: in
			Default value: 
			Effect: 
			Exception?: F
			Stream?: F
		Return type: 
		Overridability: 
		Stereotype: 
		Visibility: public
		Operation type: instance
		Query?: F
		Preconditions: 
		Postconditions: 
		Body: begin
	FileListBox1.Directory:= ListBox1.Directory;
end;
		Documentation: 
	Package: 
	Abstract?: F
	Active?: F
	Stereotype: 
	Overridability: virtual
	Role: 
	Parameters: 
	Constraints: 
	Invariant: 
	Derivation rules: 
	Responsibility: 
	Documentation: 
	Simple symbol?: F
Object: FileListBox <Class [UML]> 5_7329
	Class name: FileListBox
	Attributes: +Place:coordinates +Width:integer
	Operations: +FileListBox|Click(Sender:TObject)void
	Object: +FileListBox|Click(Sender:TObject)void <Operation [UML]> 5_13468
		Operation name: FileListBox|Click
		Parameters: in Sender:TObject
		Object: in Sender:TObject <Parameter> 5_4521
			Parameter: Sender
			Data type: TObject
			Direction: in
			Default value: 
			Effect: 
			Exception?: F
			Stream?: F
		Return type: 
		Overridability: 
		Stereotype: 
		Visibility: public
		Operation type: instance
		Query?: F
		Preconditions: 
		Postconditions: 
		Body: begin
	Image1.Picture.LoadFromFile(FileListBox1.Filename);
	StatusBar.SimpleText :=ExtractFilename(FileListBox1.Filename);
end;
		Documentation: 
	Package: 
	Abstract?: F
	Active?: F
	Stereotype: 
	Overridability: 
	Role: 
	Parameters: 
	Constraints: 
	Invariant: 
	Derivation rules: 
	Responsibility: 
	Documentation: 
	Simple symbol?: F
Object: ComboBox <Class [UML]> 5_7359
	Class name: ComboBox
	Attributes: +Place:coordinates +Width:integer
	Operations: +ComboBox|Change(Sender:TObject)void
	Object: +ComboBox|Change(Sender:TObject)void <Operation [UML]> 5_10051
		Operation name: ComboBox|Change
		Parameters: in Sender:TObject
		Return type: 
		Overridability: 
		Stereotype: 
		Visibility: public
		Operation type: instance
		Query?: F
		Preconditions: 
		Postconditions: 
		Body: begin
	if(SetStatusBarText(Sender) <>-1)then begin
	ListBox1.Drive := ComboBox1.Drive;
	ListBox1.Update;
	FileListBox1.Update;
end
else begin
	ListBox1.Clear;
	FileListBox1.Clear;

end;
		Documentation: 
	Package: 
	Abstract?: F
	Active?: F
	Stereotype: 
	Overridability: 
	Role: 
	Parameters: 
	Constraints: 
	Invariant: 
	Derivation rules: 
	Responsibility: 
	Documentation: 
	Simple symbol?: F
Object: TForm <Class [UML]> 5_12825
	Class name: TForm
	Attributes: +Panel:TPanel +Image:TImage
	Object: +Panel:TPanel <Attribute [UML]> 5_6632
		Name: Panel
		Data type: TPanel
		Default value: 
		Multiplicity: 
		Ordered?: F
		Unique?: T
		Sequence?: F
		Stereotype: 
		Visibility: public
		Scope: instance
		Access: 
		Derived?: F
		Constraints: 
		Documentation: 
	Object: +Image:TImage <Attribute [UML]> 5_8753
		Name: Image
		Data type: TImage
		Default value: 
		Multiplicity: 
		Ordered?: F
		Unique?: T
		Sequence?: F
		Stereotype: 
		Visibility: public
		Scope: instance
		Access: 
		Derived?: F
		Constraints: 
		Documentation: 
	Operations: +TFormCreate(Sender:TObject)void +SetStatusBarText (Sender:TObject): Integer
	Object: +TFormCreate(Sender:TObject)void <Operation [UML]> 5_5368
		Operation name: TFormCreate
		Parameters: in Sender:TObject
		Object: in Sender:TObject <Parameter> 5_10768
			Parameter: Sender
			Data type: TObject
			Direction: in
			Default value: 
			Effect: 
			Exception?: F
			Stream?: F
		Return type: 
		Overridability: 
		Stereotype: 
		Visibility: public
		Operation type: instance
		Query?: F
		Preconditions: 
		Postconditions: 
		Body: begin
	Caption := 'Select the picture';
end;
		Documentation: 
	Object: +SetStatusBarText (Sender:TObject): Integer <Operation [UML]> 5_1204
		Operation name: SetStatusBarText 
		Parameters: in Sender:TObject
		Object: in Sender:TObject <Parameter> 5_7351
			Parameter: Sender
			Data type: TObject
			Direction: in
			Default value: 
			Effect: 
			Exception?: F
			Stream?: F
		Return type: Integer
		Overridability: 
		Stereotype: 
		Visibility: public
		Operation type: instance
		Query?: F
		Preconditions: 
		Postconditions: 
		Body: var	
	Drive: Char;
	DriveSpace: Integer;
begin
	Result := 0;
	Drive :=ComboBox1.Drive;
	DriveSpace := SystemUtils.DiskFree(Ord(Drive)-Ord('a')+1);
	if (DriveSpace <> -1) then begin
		StatusBar1.SimpleText := IntegerToString(DriveSpace div 1024)+
		'bytes free';
	end
	else begin
		Result := -1;
		StatusBar1.SimpleText :='Check the drive';
	end;
end;
		Documentation: 
	Package: 
	Abstract?: F
	Active?: F
	Stereotype: 
	Overridability: 
	Role: 
	Parameters: 
	Constraints: 
	Invariant: 
	Derivation rules: 
	Responsibility: 
	Documentation: 
	Simple symbol?: F
Object: This model describes a small Delphi application. You may generate .pas files from this diagram by choosing Graph | Generate... and then Delphi report from the selection list. <Note text> 5_12793
	Note text: This model describes a small Delphi application. You may generate .pas files from this diagram by choosing Graph | Generate... and then Delphi report from the selection list.
	Stereotype: 
Relationship:  <Aggregation> 5_4563
	Association name: 
	Derivation rules: 
	Documentation: 
  Role:  <Part>  Object: <Class [UML]> 5_1068
	Role name: 
	Multiplicity: 
	Visibility: public
	Owned?: F
	Ordered?: F
	Unique?: T
	Derived?: F
	Navigable?: F
	Properties: 
	Qualifiers: 
  Role:  <Whole>  Object: <Class [UML]> 5_12825
	Composition?: F
	Role name: 
	Multiplicity: 
	Visibility: public
	Owned?: F
Relationship:  <Aggregation> 5_7997
	Association name: 
	Derivation rules: 
	Documentation: 
  Role:  <Part>  Object: <Class [UML]> 5_7302
	Role name: 
	Multiplicity: 
	Visibility: public
	Owned?: F
	Ordered?: F
	Unique?: T
	Derived?: F
	Navigable?: F
	Properties: 
	Qualifiers: 
  Role:  <Whole>  Object: <Class [UML]> 5_12825
	Composition?: F
	Role name: 
	Multiplicity: 
	Visibility: public
	Owned?: F
Relationship:  <Aggregation> 5_8079
	Association name: 
	Derivation rules: 
	Documentation: 
  Role:  <Part>  Object: <Class [UML]> 5_7329
	Role name: 
	Multiplicity: 
	Visibility: public
	Owned?: F
	Ordered?: F
	Unique?: T
	Derived?: F
	Navigable?: F
	Properties: 
	Qualifiers: 
  Role:  <Whole>  Object: <Class [UML]> 5_12825
	Composition?: T
	Role name: 
	Multiplicity: 
	Visibility: public
	Owned?: F
Relationship:  <Aggregation> 5_14829
	Association name: 
	Derivation rules: 
	Documentation: 
  Role:  <Part>  Object: <Class [UML]> 5_7359
	Role name: 
	Multiplicity: 1..*
	Visibility: public
	Owned?: F
	Ordered?: F
	Unique?: T
	Derived?: F
	Navigable?: F
	Properties: 
	Qualifiers: 
  Role:  <Whole>  Object: <Class [UML]> 5_12825
	Composition?: T
	Role name: 
	Multiplicity: 
	Visibility: public
	Owned?: F
Relationship:  <Generalization [UML]> 5_11434
	Discriminator: 
	Constraint: 
	Visibility: public
	Virtual?: F
	Completeness: 
	Derivation rules: 
  Role: Specialization <Specialization>  Object: <Class [UML]> 5_12825
  Role: Superclass <Superclass>  Object: <Class [UML]> 5_3788
